name: Build and test
on:
  push:
    branches:
      - "develop"
      - "feature/*"
      - "release/*"
      - "hotfix/*"

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        id: install
        run: npm install

      - name: Lint
        id: lint
        run: npm run lint

      - name: Build app
        id: build
        run: npm run build

      - name: Test app
        id: test
        run: npm run ci
        env:
          HTTP_PORT: 3000
          HTTP_HOST: localhost:3000
          COOKIE_DOMAIN: localhost
          CMP_ENABLED_SAMPLING_THRESHOLD_PERCENT: 100
          API_VERSION: v2

      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1

      - name: Run local k6 test
        id: local-k6
        env:
          HTTP_PORT: 3000
          HTTP_HOST: localhost:3000
          COOKIE_DOMAIN: localhost
          CMP_ENABLED_SAMPLING_THRESHOLD_PERCENT: 100
          API_VERSION: v2
        run: |
          npm start & npx wait-on http://localhost:3000/health
          ./k6 run ./load_test/core.js --vus 50 --iterations 1000

      - name: Get latest version
        id: get-latest-version
        if: github.ref == 'refs/heads/develop'
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      - name: Set snapshot tag
        id: set-snapshot-tag
        if: github.ref == 'refs/heads/develop'
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.get-latest-version.outputs.tag }}_snapshot_${{ github.run_number }}',
              sha: context.sha
            })

      - name: Log in to the Container registry
        id: registry-login
        if: github.ref == 'refs/heads/develop'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: docker-meta
        if: github.ref == 'refs/heads/develop'
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.get-latest-version.outputs.tag }}_snapshot_${{ github.run_number }}

      - name: Build and push Docker image
        id: docker-build-push
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
